/**
*
* {{properCase name }}
*
*/

{{#if memo}}
import React, { memo, useEffect, useState } from 'react'
{{else}}
import React, { useEffect, useState } from 'react'
{{/if}}
import { Link } from 'react-router-dom';

{{#if wantHeaders}}
import { Helmet } from 'react-helmet';
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl';
{{/if}}
{{#if wantActionsAndReducer}}
import {useDispatch, useSelector} from 'react-redux';
{{/if}}

{{#if wantSaga}}
import { useInjectSaga } from 'utils/injectSaga';
{{/if}}
{{#if wantActionsAndReducer}}
import { useInjectReducer } from 'utils/injectReducer';
import makeSelect{{properCase name}} from './selectors';
import reducer from './reducer';
{{/if}}
{{#if wantSaga}}
import saga from './saga';
{{/if}}
{{#if wantMessages}}
import messages from './messages';
{{/if}}

function {{ properCase name }}() {
{{#if wantActionsAndReducer}}
useInjectReducer({ key: '{{ camelCase name }}', reducer });
const dispatch = useDispatch();
{{/if}}
{{#if wantSaga}}
useInjectSaga({ key: '{{ camelCase name }}', saga });
{{/if}}

// useEffect(() => {

// }, [])
return (
<>
  {{#if wantHeaders}}
  <Helmet>
    <title>{{properCase name}}</title>
    <meta name="description" content="Description of {{properCase name}}" />
  </Helmet>
  {{/if}}
  {{#if wantMessages}}
  <FormattedMessage {...messages.header} />
  {{/if}}
</>
);
}



export default
{{#if memo}}
memo({{ properCase name }})
{{else}}
{{ properCase name }}
{{/if}}